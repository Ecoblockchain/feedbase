#!/usr/bin/env node
var command = process.argv[2]
var args    = process.argv.slice(3)

if (command == "version" || command == "--version") {
  console.log(require("../package.json").version)
  process.exit(0)
}

var feedbase

try {
  feedbase = require("..")()
} catch (error) {
  if (error.eth_rpc_connection) {
    console.error("Error: " + error.message)
    process.exit(1)
  } else {
    throw error
  }
}

switch (command) {
case "claim":
  feedbase.claim(args[0])
  feedbase.filter({}, function(error, id) {
    if (error) throw error
    if (feedbase.owner(id) == feedbase.account) {
      console.log(JSON.stringify(feedbase.inspect(id), null, 2))
      process.exit(0)
    }
  })
  setTimeout(function() {
    console.error("error: timeout")
    process.exit(1)
  }, 300 * 1000)
  break

case "transfer":
  feedbase.transfer(args[0], args[1])
  break
case "redescribe":
  feedbase.redescribe(args[0], args[1])
  break
case "reprice":
  feedbase.reprice(args[0], args[1])
  break
case "publish":
  feedbase.publish(args[0], args[1], args[2])
  break

case "inspect":
  console.log(JSON.stringify(feedbase.inspect(args[0]), null, 2))
  break
case "watch":
  feedbase.filter({}, function(error, id) {
    console.log(JSON.stringify(feedbase.inspect(id), null, 2))
  })
  break

default:
  console.error("error: unknown command: " + command)
  process.exit(1)
}
