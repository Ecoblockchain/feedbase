{
  "name": "Feedbase",
  "tagline": "Simple feed-oriented Ethereum data access pattern",
  "body": "Feedbase\r\n========\r\n\r\nThis small, self-contained Ethereum contract lets you create \"feeds\"\r\nthat you can use to publish arbitrary 32-byte values, with attached\r\nexpiration dates to prevent consumers from reading stale data.\r\n\r\nPerhaps most interestingly, the owner of a feed has the ability to tax\r\non-chain consumers (i.e., smart contracts) for making use of the feed.\r\nThis happens at most once for each feed value (to the first consumer).\r\nThe reason for this is that you couldn't really prevent anyone from\r\ncreating a simple contract that would repeat your feed values anyway.\r\nHowever, you're free to publish new values again as often as you want.\r\n\r\nThe prices can be changed at any time, although for security reasons\r\nthe address of the underlying ERC20 token can only ever be set once.\r\n\r\nOne obvious application of Feedbase is publishing financial data to\r\nsmart contracts that rely on \"oracles\" in a nice, standardized way.\r\nAnother interesting use case is for configuration of smart contracts.\r\n\r\nThink of Feedbase as a piece of low-level Ethereum infrastructure:\r\nit's free for anyone to use, and not owned or controlled by anyone.\r\n\r\n\r\nGetting started\r\n---------------\r\n\r\nFeedbase comes with a simple commmand-line tool for managing feeds:\r\n\r\n    npm install -g feedbase\r\n\r\nFor anything to happen, you obviously need to run an Ethereum node:\r\n\r\n    geth --testnet --rpc --unlock 7\r\n\r\n\r\nWorking with feeds\r\n------------------\r\n\r\nTo start putting out values, first you need to claim your feed:\r\n\r\n    feedbase claim\r\n\r\nIf you want to be able to tax your smart contract consumers, this step\r\nis where you specify the address of your (ERC20-compatible) token:\r\n\r\n    feedbase claim 0x4244e29ec71fc32a34dba8e89d4856e507d1bc87\r\n\r\nIf nothing goes wrong (sad to say, the CLI is a bit flaky sometimes),\r\nwithin a minute you should see something like this:\r\n\r\n    {\r\n      \"id\": \"7302\",\r\n      \"token\": \"0x0000000000000000000000000000000000000000\",\r\n      \"owner\": \"0x34e510285d96cdc6063d5447763afea0acd61baa\",\r\n      \"label\": \"\",\r\n      \"price\": \"0x0\",\r\n      \"timestamp\": 0,\r\n      \"expiration\": 0,\r\n      \"unpaid\": false\r\n    }\r\n\r\nNow you can do a few things.  You can inspect the feed at will:\r\n\r\n    feedbase inspect 7302\r\n\r\n**Note:**  Unfortunately, although you are an off-chain consumer who\r\ncan in principle read the value of any feed for free, the `feedbase\r\ninspect` command cannot currently display the actual value of a feed.\r\n\r\nYou can set an arbitrary label (32 bytes maximum):\r\n\r\n    feedbase set-label 7302 \"Temperature in Central Park\"\r\n\r\nIf you specified a token, you can change the price:\r\n\r\n    feedbase set-price 7302 0x10000000\r\n\r\nYou can transfer ownership of the feed to another account:\r\n\r\n    feedbase set-owner 7302 0x4b51d646f0e3677411b27101d2a3f09223a8372e\r\n\r\nYou can also continuously watch the blockchain for all Feedbase events:\r\n\r\n    feedbase watch\r\n\r\nNow, to actually update the feed value, you'd use a command like this:\r\n\r\n    feedbase set 7302 0x0000000000000000000000000000000490000000000000000000000000000000 1467204471\r\n\r\nHere, we're setting the value of feed number 7302 to the number 73\r\nrepresented in 128x128 fixed-point notation.  The expiration date is\r\nset to June 29 12:47:51 UTC 2016 (represented in standard Unix time).\r\n\r\nAgain, the values can be anything as long as they fit within 32 bytes.\r\n\r\nThat's it!\r\n\r\n\r\nMore information\r\n----------------\r\n\r\nFor more details, take a look at the following files:\r\n\r\n    contracts/feedbase.sol\r\n    contracts/feedbase_test.sol\r\n    bin/feedbase\r\n    lib/feedbase.js\r\n\r\nYou can also check out Keeper (<https://github.com/nexusdev/keeper>),\r\nan \"admin toolkit for incentive-following software daemons,\" designed\r\nto do things like publishing price feeds to blockchains.\r\n\r\nHappy hacking!\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}